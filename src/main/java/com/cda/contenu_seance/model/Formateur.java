/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package com.cda.contenu_seance.model;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import java.util.*;

@Entity
@Getter
@Setter
@NoArgsConstructor
@DiscriminatorValue(value="formateur")
public class Formateur extends Intervenant{

    @OneToMany(mappedBy = "formateur")
    private List<Seance> seances;

    @ManyToMany
    private List<Session> sessions;

    /**
     * Calcul la somme des heures des séances effectuer par le formateur
     * @return int
     */
    public int calSumSeance(){

        return getSeances().stream().mapToInt(Seance::getDurer).sum();

    }
//TODO mettre dans service
    /**
     * Concatène la première lettre du prénom et le nom séparé d'un point.
     * @param Formateur formateur
     * @return un String
     */
    public String concatNomPrenom(Formateur formateur){

        String firstLettre =  formateur.getPrenom().substring(0,1).toUpperCase();

        return firstLettre + '.'+formateur.getNom();
    }
    /**
     * Concatène la première lettre du prénom et le nom séparé d'un point.
     *
     * @return un String
     */
    public String concatNomPrenom(){

        String FirstLettre =  getPrenom().substring(0,1).toUpperCase();

        return FirstLettre + '.'+getNom();
    }

}